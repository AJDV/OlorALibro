<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK55OgCxfUABqHAsBadsJw2tdzcnq3QyTaZr
        JWGqci9+rng5k6huKnSmayZdq3MxRKt0Mx6mbiwLpGwrA6t4PwCodDcAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALB8PgCzgUUAr3k6Bax0MxqobipKpWkihqRo
        IrekaSPJo2cgt6JkHKiiZBypomUdq6RoILykZyDEpWkisaRqJXyjaic7o2spEqp7QwPCqYsAtpJmAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACobisAp20qAahvKxCobipJp2woo6Zr
        JcWmayagp20pZqlxLjerdDMbpmokDp1dEQurczIQqnEvHqdrJzyobip0pGklraFlIL+gZySPpXI1QKt6
        Pw2tbSIAq3QzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8AlVAAALeIUQKpcC4gpWkjd6Ro
        Ib+nbSiWr3o8PriJUg2zgEUCqW8rAa13NwCjahwAlFAAALF9QACsdTQBpWgjAbeHTgOxfkIRo2soRqBo
        JaeiainHpGwpZKdwLhSsfEMBqXU4AAAAAAAAAAAAAAAAAAAAAAAAAAAA////AJ5dEQC5ilIDrnc4Lqhu
        K5mkaCC1qG4rWrSBRg2pcC0Av5ZmAP///wDt4dMAAAAAAAAAAAAAAAAAAAAAAAAAAADZwKEA////ALaF
        TAAAAAAAsIFKGqduLHehZiG9o2sqfKRuLhugaikBomsrAAAAAAAAAAAAAAAAAAAAAACvej0AsoBHAqx0
        MSmobSegpmojsapvKTZeAE0A//oAAAAAAAAAAAAAAAAAAM1mrwDRZLIGsXSgDW+VewortVMDOq9cAAAA
        AAAAAAAAAAAAAAAAAAC7hkYAwo1OBKhxMFehaCXCoGclgaNtLRexg0wBqXY5AAAAAAAAAAAAq3QyALKC
        RgCnbikXpGkliaBkJLqSXjo/KzDpDUxG2BBlU9sGBtH3ADKc7QEA//8AukqcA8REoDKoW5NWTZNhSR+l
        RiMAEQAA/658AN6naAL//4cAOD5ECTc4OxInJygOOzYuDZxqLFufZiPDomsqa6dzNg7HrZQAroFMAMGW
        ZQB8KQAAqnMwCqZrJF+cZCvKZ0l6jSIj2Es2M9VIRUrZRj5s4SYRkOsVD6D0DKN5tAa4OJQ0ujSVoqdE
        jKAwkk2UGp1AhiOdRySGsXQE56NjEt6gWhZnWEctPDs5TiYoKlEODxBRDwwINJtmJm+haCTApW4uRah0
        NwWncjQAr3k7ALJ+QgKqcS8wpGghtIxdRpIxMNGcNELZgSBX3WkZcuNbDYrqUBOQ7EJmdMonujuWTLQt
        jrG1KY70pzyJpiuUS6YbnEHtIp1GnyygTDy2ol0r4pxWPc+PTUaZcUNeaFI5dSYhHIMFBQVqaU4vIqRr
        KJyjaiadp24sF7J9PwGIOAAArXc3C6huK3mkaSK0bk9+Ojk92YQyh+doCYvpsAyI6Icre9pTklStSrk5
        lIG0LY/WsiaL/7QmjfunPIqkLJRLpBqbQPwdmkL7IJxEwyafSmxdnk49wplPStubUYfgnVGdiF8wSwMC
        AVQFAwEQqnIwOaRoIbymaydNp20qBbF8PwGpcC0gpmoktKZsJW03MM4cOT7XiCyG54gMiunTQHrVUsIq
        imW2L4/JsiqN+LEliv+xJYr/tCeN+6c8iqQslEukGptA+xyaQf8cmkH/H5tE8R+cRbgcoU5buJtRWNqY
        Tb+TZzRhBQMCVQAAAA++gjwHpmsmlKVpI5OqczERqG4pBadsJkukaCG/rXUuLTYw0xo5PteILIbnhwyL
        6s1gZsJmtiSIv7Eliv+xJIr/sSWK/7Eliv+0J437pzyKpCyUS6Qam0D7HJpB/xyaQf8cmkH/HJpB/ySg
        TL6VnVFn3JhNuJNmNGAFAwJVAAAAD/2rSQGqczBYpWojv6pyMDGmayYKpmsleqRoIKW2gDoMMSzVGzk+
        14gshueHDIvpzl9kwWa1IofAsSWK/7Eliv+xJYr/sSWK/7QnjfunPIqkLJRLpBqbQPscmkH/HJpB/xya
        Qf8cmkH/I6BLwJSdUWncmE24k2Y0YAUDAlUAAAAP////AKtzMSSkZyC8qXAtZaVpJA+kZyGapWkihaxn
        AAMwK9IbOT7XiCyG54cMi+nOX2TBZrUih8CxJYr/sSWK/7Eliv+xJYr/tCeN+6c8iqQslEukGptA+xya
        Qf8cmkH/HJpB/xyaQf8joEvAlJ1RaNyYTbiTZjRgBQMCVQAAAA8AAAAAqnMzDKRoIaanbCeQo2YfFKJl
        Haeobipps20AAjAr0hs5PteILIbnhwyL6c5fZMFmtSKHwLEliv+xJYr/sSWK/7Eliv+0J437pzyKpCyU
        S6Qam0D7HJpB/xyaQf8cmkH/HJpB/yOgS8CUnVFo3JhNuJNmNGAFAwJVAAAADwAAAACseTwGo2cgi6Ro
        IaKtdjcao2YeqaNnIE+yYwABMCvSGzk+14gshueHDIvpzl9kwWa1IofAsSWK/7Eliv+xJYr/sSWK/7Qn
        jfunPIqkLJRLpBqbQPscmkH/HJpB/xyaQf8cmkH/I6BLwJSdUWjcmE24k2Y0YAUDAlUAAAAPAAAAAKBh
        FwSgYhl7qHAswK12NxqjZh6po2YfT7JiAAEwK9IbOT7XiCyG54cMi+nOX2TBZrUih8CxJYr/sSWK/7El
        iv+xJYr/tCeN+6c8iqQslEukGptA+xyaQf8cmkH/HJpB/xyaQf8joEvAlJ1RaNyYTbiTZjRgBQMCVQAA
        AA8AAAAAoGEXBKFiGXupcCzApGghFKNlHaenbChpsmsAAjAr0hs5PteILIbnhwyL6c5fZMFmtSKHwLEl
        iv+xJYr/sSWK/7Eliv+0J437pzyKpCyUS6Qam0D7HJpB/xyaQf8cmkH/HJpB/yOgS8CUnVFo3JhNuJNm
        NGAFAwJVAAAADwAAAACveToGpGcgi6VpIqKmbCYPpWkim6ZrJou/iTcEMCvSGzk+14gshueHDIvpzl9k
        wWa1IofAsSWK/7Eliv+xJYr/sSWK/7QnjfunPIqkLJRLpBqbQPscmkH/HJpB/xyaQf8cmkH/I6BLwJSd
        UWjcmE24k2Y0YAUDAlUAAAAPAAAAAK96PQ+laSOrp20pkadtKAqnbCd6pGghqbR9NQ0xLNUbOT7XiCyG
        54cMi+nOX2TBZrUih8CxJYr/sSWK/7Eliv+xJYr/tCeN+6c8iqQslEukGptA+xyaQf8cmkH/HJpB/xya
        Qf8joEvAlJ1RaNyYTbiTZjRgBQMCVQAAAA////8AqnIwJ6RoIMGqci9lqnEvBahuKkukaCG/rHEpLTYw
        0xo5PteILIbnhwyL6c5fZMFmtSKHwLEliv+xJYr/sSWK/7Ekiv+0Jo38pz2JpiyUS6Yam0D8HJpB/xya
        Qf8cmkH/HJpB/yOgS8CUnVFo3JhNuJJmNGAFAwJVAAAAD/unRAGpcC1XpGcguahuKiy1hEsBqnIvH6Vp
        I66maiRsNi/OHDk/14oshueIDIvpzmBkwGa1IofAsSWK/7Eliv+xJYr/sSaK/7UqjuCuPY5xK5pMdR2c
        QuQcmkH/HJpB/xyaQf8cmkH/I6BLwJSdUWjcmE24kmY0YQUDAlYAAAAPxZVcDKhtKpqlaiWQp20pD41E
        AACueDkKqG8sdKRpIrWCW2w2O0PbXSWI53sMiebPXmG8Z7QihsCxJYr/sSWK/7Ini/m0Lo/GuDeUYrlE
        mRgsoU4aIp1HZB+bQ8UdmkH5HJpB/xyaQf8joEvAlJ1RaduXTbmkdDxYEhAPPhIQDwyudjZBpmsmxKlw
        LU2qczIFs4JHALeIUAKtdzcvpmslt6RoKH9OX8wcHI3pag2J58pgYLljryKDwq0kh/+yKYvrtTCQmLk6
        ljq/SZ4KvUWcACefSwAon0wKI51HOiKdRp4fm0TvHJpB/yOgS8GRnVFk2pdNtsuOSUYyKSEOonM9F6Zr
        JZ2mbCeYqnIwFraGTwDNroYAbQgAALB7PQqobytgpWghv6FuLU0YkvAwDo7rU4pJokKtKYfIri2K17M5
        km+7QJkcyGesAsJWpAAAAAAAAAAAAC2hUAAtoU8CLqJRICefS3IgnETYKKBMw2WiVD7emVJO2ppRH+in
        XASmayVqpGghuadsKDypcS4EqW8sAAAAAACvej0Au49dAKpyMBembCeIo2YftpNkKjwAt/8FszuUI7Q3
        kXayPJFJtVCaDaEdfQD///8AAAAAAAAAAAAAAAAAAAAAAJ7TqwAAAAAANKZVDSefSkkxo1N1P6dbI/+f
        XwfHjUwIp24pWKVqJL+mayZjqG4rCwAAAACudzcAAAAAAAAAAACzgkcAt4lRArB8PiqqcS+go2YdsqRl
        GjrFZZ0IvUmfErhQmwa5UJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxpFMAMKNRBjuo
        XBM8q2EGuoZQCKRnIFqkaCLDqnEvgKx1NBaocC8AqnMyAAAAAAAAAAAAAAAAAP///wCobSkAw5psA7F+
        Qi6obyuao2cfu6VrJV+xgT8QzmGAALF0PgD///8A3sasAAAAAAAAAAAAAAAAAAAAAAAAAAAA/5NyAP+T
        cgDZWRsAANFqAK10Mxmnayd8pGcgwahuKnyvejsbvpFdAbaESwAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /wCXUwIAuIpTAqt1MyCnbSl3pWkjwqZqJJuobSk+rng5DbF9QAKobyoBrHg6Aap5QAChYxoAtoRLAKtz
        MwGkaCIBs4BEA6x1NRSobSlUpGghq6RoIbamayZbqnIwFLN/QwGueDkAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACsdjYArXc4Aax2NhCqcjBJp20ooqVpIsGlaCKfp2wnaKhvKz6qdDUkpnI0E59h
        GQywez8XqnEvJqVqJUKnbCd1pWkjrqVpI8WmayaNp20pNKpxLwmvejwArHU0AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2hUwAvI9bALJ/RAWtdzcXqXAsRKZrJoWlaSO1pGghxqJn
        IcCfYx2snWAZoqBlH7KjZyDBo2YfwaNnIaumayV3q3MyO6x1NBKpcC4C+fn9ALWFTQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsX0/ALSDRwGrcjAErHU1Dax1
        NCGpcS5BpGghWaFmIGahaSdtnmMdY6RoIlWpcC04qXEvGqlxLgqvezwDwZhnALqMVgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/4AB//8AAH/8AAA/+APAD/A//gfg/D8D4Cg0A8AAAAGAAAAAgAAAAAAA
        AAAAAAAAAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAAAAAAAIAAAACAAYABwAPAAeAP
        8APgH/gH8D/+B/gBwA/8AAA//wAAf/+AAf8=
</value>
  </data>
</root>